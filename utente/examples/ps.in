/*
 * Programma S
 * Test dell' IO su/da interfacce seriali
 * Verificare che il sistema sia compilato correttamente per
 *  l' ambiente in uso: se si esegue su PC la riga contenente
 *  la chiamata a kickse_out() deve essere commentata; se si esegue in
 *  emulazione da Bochs deve essere presente
 */

#include <sys.h>
#include <lib.h>

/*
 * Variabili condivise, necessarie per come viene gestito l' IO da
 *  interfaccia seriale.
 */
char serial_buffer[200];
int serial_num;
char serial_error;

/*
 * Processo S
 */
process proc_ps body ps(8), 11, LIV_UTENTE;

process_body ps(int a)
{
	int porta;
	int c_len, c1_len;
	char c[200], c1[200];

	printf(a, "Processo di prova per comunicazione seriale\n");

	while(1) {
		printf(a, "\nScelte possibili:\n");
		printf(a, "A - Scrivi stringa su porta (writese_0)\n");
		printf(a, "B - Scrivi stringa su porta (writese_n)\n");
		printf(a, "C - Leggi stringa da porta (readse_n)\n");
		printf(a, "D - Leggi stringa da porta (readse_ln)\n");
		printf(a, "Q - Esci\n");
		printf(a, "Scelta -> ");

		c_len = 200;
		term_read_n(a, c, c_len);

		c1_len = 200;
		printf(a, "Porta -> ");
		term_read_n(a, c1, c1_len);

		porta = c1[0] - '0';
		if(porta != 0 && porta != 1) {
			printf(a, "Porta sbagliata %d\n", porta);
			continue;
		}

		switch(c[0]) {
			case 'a':
			case 'A':
				serial_num = 200;
				printf(a, "Inserisci stringa -> ");
				term_read_n(a, serial_buffer, serial_num);
				printf(a, "Invio %s su %d con writese_0\n", serial_buffer, porta);
				writese_0(porta, serial_buffer, serial_num);
				printf(a, "Scritti %d byte\n", serial_num);
				break;
			case 'b':
			case 'B':
				serial_num = 200;
				printf(a, "Inserisci stringa -> ");
				term_read_n(a, serial_buffer, serial_num);
				printf(a, "Invio %s su %d con writese_n\n", serial_buffer, porta);
				writese_n(porta, serial_buffer, serial_num);
				break;
			case 'c':
			case 'C':
				printf(a, "Lettura stringa da %d con readse_n (5 caratteri)\n", porta);
				serial_num = 5;
				readse_n(porta, serial_buffer, serial_num, serial_error);
				printf(a, "Terminato con codice %d, letto %s\n",
					serial_error, serial_buffer);
				break;
			case 'd':
			case 'D':	
				printf(a, "Lettura stringa da %d con readse_ln\n", porta);
				serial_num = 200;
				readse_ln(porta, serial_buffer, serial_num, serial_error);
				printf(a, "Terminato con codice %d, letto %s\n",
					serial_error, serial_buffer);
				break;
			case 'q':
			case 'Q':
				printf(a, "Fine.\n");
				goto end;
		}
	}
end:	;
}

